on:
  push:
    tags:
    - 'v*'

name: Upload Release Asset

jobs:
  once:
    name: Create GitHub release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create a release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: true
          prerelease: false
  
  release-linux:
    name: build & release on Linux
    needs: once
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: Install Node
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install Electron-packager
        run: |
          npm install electron-packager --save-dev  
        
      - name: Build project
        run: |
          npm run publish:linux
          cd ./out
          for dir in *; do zip linux.zip -r $dir; done

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.once.outputs.upload_url }}
          asset_path: ./out/linux.zip
          asset_name: electron-test-linux
          asset_content_type: application/zip

  release-osx:
    name: build & release on OS-X
    needs: once
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: Install Node
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install Electron-packager
        run: |
          npm install electron-packager --save-dev  
        
      - name: Build project
        run: |
          npm run publish:osx
          cd ./out
          for dir in *; do zip darwin.zip -r $dir; done

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.once.outputs.upload_url }}
          asset_path: ./out/darwin.zip
          asset_name: electron-test-darwin
          asset_content_type: application/zip
  
  release-win:
    name: build & release on Windows
    needs: once
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: Install Node
        uses: actions/setup-node@v2
        with:
          node-version: '12'
      - run: npm install

      - name: Install Electron-packager & wine
        run: |
          npm install -g electron-packager 
        #sudo apt install wine64 
        
      - name: Build project
        run: |
          npm run publish:win
          cd ./out
          tar -c -f win64.zip .
        shell: bash

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.once.outputs.upload_url }}
          asset_path: ./out/win64.zip
          asset_name: electron-test-win64
          asset_content_type: application/zip
        