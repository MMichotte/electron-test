on:
  push:
    tags:
    - 'v*'

name: Upload Release Asset

jobs:
  once:
    name: Create GitHub release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create a release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: true
          prerelease: false
  
  build-release:
    name: Create cross-platform release build, tag and upload binaries
    needs: once
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: Install Node
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install Electron-packager
        run: |
          npm install electron-packager --save-dev  
      
      - name: Build project
        run: |
          npm run publish:native
          cd ./out
          for dir in *; do zip ${dir}.zip -r $dir; done

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.once.outputs.upload_url }}
          asset_path: ./out
          asset_name: electron-test-${{ matrix.os }}
          asset_content_type: application/zip
